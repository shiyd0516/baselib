apply plugin: 'maven-publish'

Properties properties = new Properties()
def file=new File(rootProject.projectDir,'local.properties')
if(null!=file&&file.exists()) {
  properties.load(new FileInputStream(file))
}

//configurations {
//  deployerJars
//}
//
//repositories {
//  mavenCentral()
//}

//上传到Maven仓库的task
afterEvaluate {
  publishing {
    repositories {
      //指定快照版本 maven仓库url， todo 请改为自己的maven服务器地址、账号密码
      maven {
        //仓库默认不支持Https,所有这里设置成false.
        allowInsecureProtocol=false
        url 'https://s01.oss.sonatype.org/content/repositories/snapshots/'
        credentials {
          username = properties.getProperty('maven.username')//maven仓库账号
          password = properties.getProperty('maven.password')//maven仓库账号
        }
      }

      //指定正式版本 maven仓库url， todo 请改为自己的maven服务器地址、账号密码
      //      repository(url: 'http://s01.oss.sonatype.org/maven-releases/') {
      //        authentication(userName: 'shiyadong', password: 'Syd%715514983')
      //      }
    }
    publications {
      snapshot(MavenPublication) {
        //from components.release
        //配置需要上传到maven仓库的文件
//        artifacts {
//          archives androidSourcesJar
//          archives androidJavadocsJar
//        }
        groupId = 'io.github.shiyd0516' // 唯一标识（通常为模块包名，也可以任意）
        artifactId = 'lib_img' // 项目名称（通常为类库模块名称，也可以任意）
        version = '1.0.0-SNAPSHOT' // 版本号
      }
    }
  }
}

// type显示指定任务类型或任务, 这里指定要执行Javadoc这个task,这个task在gradle中已经定义
task androidJavadocs(type: Javadoc) {
  // 设置源码所在的位置
  source = android.sourceSets.main.java.sourceFiles
}

// 将文档打包成jar,生成javadoc.jar
task androidJavadocsJar(type: Jar) {
  // 指定文档名称
  archiveClassifier.set('javadoc')
  from androidJavadocs.destinationDir
}

// 将源码打包 ，生成sources.jar
task androidSourcesJar(type: Jar) {
  archiveClassifier.set('sources')
  from android.sourceSets.main.java.srcDirs
}

